/* ROOT 사용자 생성
CREATE USER 'ROOT'@'%' IDENTIFIED BY 'ROOT';
GRANT ALL PRIVILEGES ON *.* TO 'ROOT'@'%' WITH GRANT OPTION;
*/
 
/* traview SEQ 생성*/

DROP TABLE IF EXISTS `MASTER_SEQ`;
CREATE TABLE MASTER_SEQ(
	ID INT NOT NULL, 
	SEQ_NAME VARCHAR(50) NOT NULL
);

DROP FUNCTION IF EXISTS GET_SEQ;
DELIMITER $$
CREATE FUNCTION GET_SEQ(P_SEQ_NAME VARCHAR(45))
RETURNS INT READS SQL DATA
BEGIN
DECLARE RESULT_ID INT;
UPDATE MASTER_SEQ SET ID = LAST_INSERT_ID(ID+1) 
 WHERE SEQ_NAME = P_SEQ_NAME;
SET RESULT_ID = (SELECT LAST_INSERT_ID());
RETURN RESULT_ID;
END $$
DELIMITER ;

INSERT INTO MASTER_SEQ VALUES (1, 'POST');
--INSERT INTO MASTER_SEQ VALUES (1, 'FILE');
--INSERT INTO MASTER_SEQ VALUES (1, 'FILE');
--INSERT INTO MASTER_SEQ VALUES (1, 'FILE');
--INSERT INTO MASTER_SEQ VALUES (1, 'FILE');

/* traview DB 생성*/

DROP TABLE IF EXISTS `USER`;

CREATE TABLE `USER` (
	`USER_ID`	VARCHAR(20)	NOT NULL,
	`USER_PW`	VARCHAR(100)	NULL,
	`USER_NM`	VARCHAR(10)	NULL,
	`NICKNAME`	VARCHAR(20)	NULL,
	`BIRTHDAY`	VARCHAR(8)	NULL,
	`GENDER`	VARCHAR(10)	NULL,
	`EMAIL`	VARCHAR(20)	NULL,
	`PHONE`	VARCHAR(20)	NULL,
	`CREATE_DATE`	DATETIME	NOT NULL	DEFAULT CURRENT_TIMESTAMP,
	`UPDATE_DATE`	DATETIME	NULL,
	`USE_YN` VARCHAR(1)	NOT NULL	DEFAULT 'Y'
);

DROP TABLE IF EXISTS `POST`;

CREATE TABLE `POST` (
	`POST_SEQ`	INT	NOT NULL,
	`POST_INFO_ID`	INT	NOT NULL,
	`POST_TITLE`	VARCHAR(30)	NULL,
	`POST_CONTENTS`	VARCHAR(500)	NULL,
	`POST_DESCRIPTION`	VARCHAR(50)	NULL,
	`IS_MAIN`	VARCHAR(5)	NULL,
	`CREATE_DATE`	DATETIME	NOT NULL	DEFAULT CURRENT_TIMESTAMP,
	`CREATE_USER`	VARCHAR(20)	NULL,
	`UPDATE_DATE`	DATETIME	NULL,
	`UPDATE_USER`	VARCHAR(20)	NULL,
	`USE_YN` VARCHAR(1)	NOT NULL	DEFAULT 'Y'
);
   
DROP TABLE IF EXISTS `COMMENT`;

CREATE TABLE `COMMENT` (
	`COMMENT_SEQ`	INT	NOT NULL,
	`POST_SEQ`	INT	NOT NULL,
	`COMMENT_CONTENTS`	VARCHAR(200)	NULL,
	`FIELD`				VARCHAR(255)	NULL,
	`CREATE_DATE`	DATETIME	NOT NULL	DEFAULT CURRENT_TIMESTAMP,
	`UPDATE_DATE`	DATETIME	NULL,
	`USE_YN` VARCHAR(1)	NOT NULL	DEFAULT 'Y'
);

DROP TABLE IF EXISTS `POST_INFO`;

CREATE TABLE `POST_INFO` (
	`POST_INFO_ID`	INT	NOT NULL,
	`POST_INFO_NM`	VARCHAR(100)	NULL,
	`USE_YN` VARCHAR(1)	NOT NULL	DEFAULT 'Y'
);

DROP TABLE IF EXISTS `SCHEDULES`;

CREATE TABLE `SCHEDULES` (
	`SCHEDULES_SEQ`	INT	NOT NULL,
	`USER_ID`	VARCHAR(20)	NOT NULL,
	`SCHEDULES_TITLE`	VARCHAR(30)	NULL,
	`SCHEDULES_CONTENTS`	VARCHAR(300)	NULL,
	`CREATE_DATE`	DATETIME	NOT NULL	DEFAULT CURRENT_TIMESTAMP,
	`UPDATE_DATE`	DATETIME	NULL,
	`USE_YN` VARCHAR(1)	NOT NULL	DEFAULT 'Y'
);

DROP TABLE IF EXISTS `SCHEDULE`;

CREATE TABLE `SCHEDULE` (
	`SCHEDULES_SEQ`	INT	NOT NULL,
	`SCHEDULE_SEQ`	INT	NOT NULL,
	`USER_ID`	VARCHAR(20)	NOT NULL,
	`SCHEDULE_TITLE`	VARCHAR(20)	NULL,
	`SCHEDULE_COUNTRY`	VARCHAR(20)	NULL,
	`SCHEDULE_CITY`	VARCHAR(20)	NULL,
	`SCHEDULE_TIME`	DATETIME	NULL,
	`SCHEDULE_CONTENTS`	VARCHAR(500)	NULL,
	`CREATE_DATE`	DATETIME	NOT NULL	DEFAULT CURRENT_TIMESTAMP,
	`UPDATE_DATE`	DATETIME	NULL,
	`USE_YN` VARCHAR(1)	NOT NULL	DEFAULT 'Y'
);

DROP TABLE IF EXISTS `ROLE_INFO`;

CREATE TABLE `ROLE_INFO` (
	`ROLE_ID`	VARCHAR(20)	NOT NULL,
	`ROLE_NM`	VARCHAR(10)	NULL,
	`ROLE_EX`	VARCHAR(200)	NULL,
	`ROLE_ORDER`	INT	NULL,
	`CREATE_DATE`	DATETIME	NOT NULL	DEFAULT CURRENT_TIMESTAMP,
	`CREATE_USER`	VARCHAR(20)	NULL,
	`UPDATE_DATE`	DATETIME	NULL,
	`UPDATE_USER`	VARCHAR(20)	NULL,
	`USE_YN` VARCHAR(1)	NOT NULL	DEFAULT 'Y'
);

DROP TABLE IF EXISTS `USER_ROLE`;

CREATE TABLE `USER_ROLE` (
	`USER_ID`	VARCHAR(20)	NOT NULL,
	`ROLE_ID`	VARCHAR(20)	NOT NULL
);

ALTER TABLE `USER` ADD CONSTRAINT `PK_USER` PRIMARY KEY (
	`USER_ID`
);

ALTER TABLE `POST` ADD CONSTRAINT `PK_POST` PRIMARY KEY (
	`POST_SEQ`
);

ALTER TABLE `COMMENT` ADD CONSTRAINT `PK_COMMENT` PRIMARY KEY (
	`COMMENT_SEQ`,
	`POST_SEQ`
);

ALTER TABLE `POST_INFO` ADD CONSTRAINT `PK_POST_INFO` PRIMARY KEY (
	`POST_INFO_ID`
);

ALTER TABLE `SCHEDULES` ADD CONSTRAINT `PK_SCHEDULES` PRIMARY KEY (
	`SCHEDULES_SEQ`,
);

ALTER TABLE `SCHEDULE` ADD CONSTRAINT `PK_SCHEDULE` PRIMARY KEY (
	`SCHEDULE_SEQ`
);

ALTER TABLE `ROLE_INFO` ADD CONSTRAINT `PK_ROLE_INFO` PRIMARY KEY (
	`ROLE_ID`
);

ALTER TABLE `USER_ROLE` ADD CONSTRAINT `PK_USER_ROLE` PRIMARY KEY (
	`USER_ID`,
	`ROLE_ID`
);

